/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pjcmaker;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/**
 *
 * @author gal
 */
public class FileSaver extends javax.swing.JPanel {

    GUI parent;

    /**
     * Creates new form FileSaver
     */
    public FileSaver(GUI parent) {
        this.parent = parent;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        SaveCode = new javax.swing.JButton();
        SaveBP = new javax.swing.JButton();

        jLabel1.setText("Please Save The Sample's Code");

        jLabel2.setText("Please Save The Sample's BluePrint");

        SaveCode.setText("Save");
        SaveCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveCodeActionPerformed(evt);
            }
        });

        SaveBP.setText("Save");
        SaveBP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveBPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(SaveCode)))
                .addContainerGap(78, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(SaveBP)
                .addGap(166, 166, 166))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(SaveCode)
                .addGap(27, 27, 27)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(SaveBP)
                .addContainerGap(95, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SaveCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveCodeActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setSelectedFile(new File(Communicator.getIns().getCodePath()));
        int returnVal = fc.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            FileReader in;
            FileWriter out;
            BufferedReader bf;
            PrintWriter pw;
            try {
                in = new FileReader(Communicator.getIns().getCodePath());
                out = new FileWriter(fc.getSelectedFile());
                bf = new BufferedReader(in);
                pw = new PrintWriter(out);
                bf.lines().forEach(line -> {
                    System.out.println("");
                    System.out.println(line);
                    pw.write(line);
                });
                pw.flush();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(FileSaver.class.getName()).log(Level.SEVERE, null, ex);
                ex.printStackTrace();
            } catch (IOException ex) {
                Logger.getLogger(FileSaver.class.getName()).log(Level.SEVERE, null, ex);
                ex.printStackTrace();
            }
        } else {

        }
    }//GEN-LAST:event_SaveCodeActionPerformed

    private void SaveBPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveBPActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setSelectedFile(new File(Communicator.getIns().getBpPath()));

        int returnVal = fc.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {

            FileReader in;
            FileWriter out;
            BufferedReader bf;
            PrintWriter pw;
            try {
                in = new FileReader(Communicator.getIns().getBpPath());
                out = new FileWriter(fc.getSelectedFile());
                bf = new BufferedReader(in);
                pw = new PrintWriter(out);
                bf.lines().forEach(line -> {
                    System.out.println("");
                    System.out.println(line);
                    pw.println(line);
                });
                pw.flush();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(FileSaver.class.getName()).log(Level.SEVERE, null, ex);
                ex.printStackTrace();
            } catch (IOException ex) {
                Logger.getLogger(FileSaver.class.getName()).log(Level.SEVERE, null, ex);
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_SaveBPActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SaveBP;
    private javax.swing.JButton SaveCode;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
